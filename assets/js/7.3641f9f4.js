(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{409:function(v,_,l){"use strict";l.r(_);var i=l(33),t=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"_01-基础总结深入"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_01-基础总结深入"}},[v._v("#")]),v._v(" 01_基础总结深入")]),v._v(" "),l("h2",{attrs:{id:"数据类型的分类和判断"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数据类型的分类和判断"}},[v._v("#")]),v._v(" 数据类型的分类和判断")]),v._v(" "),l("ul",[l("li",[v._v("基本(值)类型\n"),l("ul",[l("li",[v._v("Number ----- 任意数值 -------- typeof")]),v._v(" "),l("li",[v._v("String ----- 任意字符串 ------ typeof")]),v._v(" "),l("li",[v._v("Boolean ---- true/false ----- typeof")]),v._v(" "),l("li",[v._v("undefined --- undefined ----- typeof/===")]),v._v(" "),l("li",[v._v("null -------- null ---------- ===")])])]),v._v(" "),l("li",[v._v("对象(引用)类型\n"),l("ul",[l("li",[v._v("Object 任意对象----- typeof/instanceof")]),v._v(" "),l("li",[v._v("Array 一种特别的对象（数值下标，内部数据是有序的）------ instanceof")]),v._v(" "),l("li",[v._v("Function一种特别的对象（可以执行） ---- typeof")])])]),v._v(" "),l("li",[v._v("typeof不能判断：null和object  object和array")]),v._v(" "),l("li",[v._v("1.undefined与null的区别？\n"),l("ul",[l("li",[v._v("undefined代表定义了，未赋值")]),v._v(" "),l("li",[v._v("null代表定义并赋值了，只是值为null")])])]),v._v(" "),l("li",[v._v("2.什么时候给变量赋值为null呢？\n"),l("ul",[l("li",[v._v("初始赋值，表明将要赋值为对象")]),v._v(" "),l("li",[v._v("结束前，让对象成为垃圾对象（被垃圾回收器回收）")])])]),v._v(" "),l("li",[v._v("3.严格区分变量类型和数据类型？\n"),l("ul",[l("li",[v._v("数据的类型\n"),l("ul",[l("li",[v._v("基本类型")]),v._v(" "),l("li",[v._v("对象类型")])])]),v._v(" "),l("li",[v._v("变量的类型（变量内存值的类型）\n"),l("ul",[l("li",[v._v("基本类型：保存的是基本类型的数据")]),v._v(" "),l("li",[v._v("引用类型：保存的是地址值")])])])])])]),v._v(" "),l("h2",{attrs:{id:"数据-变量-内存的理解"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数据-变量-内存的理解"}},[v._v("#")]),v._v(" 数据,变量, 内存的理解")]),v._v(" "),l("ul",[l("li",[v._v("1.什么是数据?\n"),l("ul",[l("li",[v._v("存储在内存中代表特定信息的‘东东‘，本质上是0101")]),v._v(" "),l("li",[v._v("在内存中可读的, 可传递的保存了特定信息的'东东'")]),v._v(" "),l("li",[v._v("一切皆数据, 函数也是数据")]),v._v(" "),l("li",[v._v("在内存中的所有操作的目标: 数据")])])]),v._v(" "),l("li",[v._v("什么是变量?\n"),l("ul",[l("li",[v._v("可变化的量，由变量名和变量值组成")]),v._v(" "),l("li",[v._v("在程序运行过程中它的值是允许改变的量")]),v._v(" "),l("li",[v._v("一个变量对应一块小内存, 它的值保存在此内存中")])])]),v._v(" "),l("li",[v._v("什么是内存?\n"),l("ul",[l("li",[v._v("内存条通电后产生的存储空间(临时的)")]),v._v(" "),l("li",[v._v("一块内存包含2个方面的数据\n"),l("ul",[l("li",[v._v("内部存储的数据")]),v._v(" "),l("li",[v._v("地址值数据")])])]),v._v(" "),l("li",[v._v("内存空间的分类\n"),l("ul",[l("li",[v._v("栈空间: 全局变量和局部变量")]),v._v(" "),l("li",[v._v("堆空间: 对象")])])])])]),v._v(" "),l("li",[v._v("内存,数据, 变量三者之间的关系\n"),l("ul",[l("li",[v._v("内存是容器, 用来存储不同数据")]),v._v(" "),l("li",[v._v("变量是内存的标识, 通过变量我们可以操作(读/写)内存中的数据")])])]),v._v(" "),l("li",[v._v("问题：var a =  xxx,  a内存中到底保存的是什么？\n"),l("ul",[l("li",[v._v("xxx是基本数据，保存的就是这个数据")]),v._v(" "),l("li",[v._v("xxx是对象，保存的是对象的地址值")]),v._v(" "),l("li",[v._v("xxx是一个变量，保存的xxx的内存内容（可能是基本数据，也可能是地址值）")])])]),v._v(" "),l("li",[v._v("关于引用变量赋值问题\n"),l("ul",[l("li",[v._v("2个引用变量指向同一个对象，通过一个变量修改对象内部数据，另一个变量看到的是修改之后的数据")]),v._v(" "),l("li",[v._v("2个引用变量指向同一个对象，让其中一个引用变量指向另一个对象，另一引用变量依然指向前一个对象")])])]),v._v(" "),l("li",[v._v("在js调用函数时传递变量参数时，是值传递还是引用传递？\n"),l("ul",[l("li",[v._v("理解1：都是值（基本/地址值）传递")]),v._v(" "),l("li",[v._v("理解2： 可能是值传递，也可能是引用传递（地址值）")])])]),v._v(" "),l("li",[v._v("JS引擎如何管理内存？\n"),l("ul",[l("li",[v._v("1.内存生命周期\n"),l("ul",[l("li",[v._v("分配小内存空间，得到它的使用权")]),v._v(" "),l("li",[v._v("存储数据，可以反复进行操作")]),v._v(" "),l("li",[v._v("释放小内存空间")])])]),v._v(" "),l("li",[v._v("2.释放内存\n"),l("ul",[l("li",[v._v("局部变量：函数执行完自动释放")]),v._v(" "),l("li",[v._v("对象：称为垃圾对象=>垃圾回收器回收")])])])])])]),v._v(" "),l("h2",{attrs:{id:"对象的理解和使用"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#对象的理解和使用"}},[v._v("#")]),v._v(" 对象的理解和使用")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("什么是对象?")]),v._v(" "),l("ul",[l("li",[v._v("多个数据(属性)的集合")]),v._v(" "),l("li",[v._v("用来保存多个数据(属性)的容器")])])]),v._v(" "),l("li",[l("p",[v._v("为什么要用对象？")]),v._v(" "),l("ul",[l("li",[v._v("统一管理多个数据")])])]),v._v(" "),l("li",[l("p",[v._v("对象的组成")]),v._v(" "),l("ul",[l("li",[v._v("属性：属性名（字符串）和属性值（任意）组成")]),v._v(" "),l("li",[v._v("方法：一种特别的属性（属性值是函数）")])])]),v._v(" "),l("li",[l("p",[v._v("如何访问对象内部数据？")]),v._v(" "),l("ul",[l("li",[v._v(".属性名  不通用")]),v._v(" "),l("li",[l("a",{attrs:{href:"%E5%B1%9E%E6%80%A7%E5%90%8D%E6%9C%89%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/%E5%B1%9E%E6%80%A7%E5%90%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F"}},[v._v("'属性名'")])])])]),v._v(" "),l("li",[l("p",[v._v("什么时候必须使用"),l("a",{attrs:{href:"%E5%B1%9E%E6%80%A7%E5%90%8D%E6%9C%89%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6/%E5%B1%9E%E6%80%A7%E5%90%8D%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F"}},[v._v("'属性名'")]),v._v("的方式？")]),v._v(" "),l("ul",[l("li",[v._v("属性名包含特殊字符：- 空格")]),v._v(" "),l("li",[v._v("属性名不确定")])])]),v._v(" "),l("li",[l("p",[v._v("属性组成:")]),v._v(" "),l("ul",[l("li",[v._v("属性名 : 字符串(标识)")]),v._v(" "),l("li",[v._v("属性值 : 任意类型")])])]),v._v(" "),l("li",[l("p",[v._v("属性的分类:")]),v._v(" "),l("ul",[l("li",[v._v("一般 : 属性值不是function  描述对象的状态")]),v._v(" "),l("li",[v._v("方法 : 属性值为function的属性  描述对象的行为")])])]),v._v(" "),l("li",[l("p",[v._v("特别的对象")]),v._v(" "),l("ul",[l("li",[v._v("数组: 属性名是0,1,2,3之类的索引")]),v._v(" "),l("li",[v._v("函数: 可以执行的")])])]),v._v(" "),l("li",[l("p",[v._v("如何操作内部属性(方法)")]),v._v(" "),l("ul",[l("li",[v._v(".属性名")]),v._v(" "),l("li")])])]),v._v(" "),l("h2",{attrs:{id:"函数的理解和使用"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#函数的理解和使用"}},[v._v("#")]),v._v(" 函数的理解和使用")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("什么是函数?")]),v._v(" "),l("ul",[l("li",[v._v("用来实现特定功能的, n条语句的封装体")]),v._v(" "),l("li",[v._v("只有函数类型的数据是可以执行的, 其它的都不可以")])])]),v._v(" "),l("li",[l("p",[v._v("为什么要用函数?")]),v._v(" "),l("ul",[l("li",[v._v("提高复用性")]),v._v(" "),l("li",[v._v("便于阅读交流")])])]),v._v(" "),l("li",[l("p",[v._v("如何定义函数？")]),v._v(" "),l("ul",[l("li",[v._v("函数声明")]),v._v(" "),l("li",[v._v("函数表达式")])])]),v._v(" "),l("li",[l("p",[v._v("如何调用（执行）函数？")]),v._v(" "),l("ul",[l("li",[v._v("test()  直接调用")]),v._v(" "),l("li",[v._v("obj.test() 通过对象调用")]),v._v(" "),l("li",[v._v("new test()  new调用")]),v._v(" "),l("li",[v._v("test.call/apply(obj) 临时让test成为obj的方法进行调用")])])]),v._v(" "),l("li",[l("p",[v._v("函数也是对象")]),v._v(" "),l("ul",[l("li",[v._v("instanceof Object===true")]),v._v(" "),l("li",[v._v("函数有属性: prototype")]),v._v(" "),l("li",[v._v("函数有方法: call()/apply()")]),v._v(" "),l("li",[v._v("可以添加新的属性/方法")])])]),v._v(" "),l("li",[l("p",[v._v("函数的3种不同角色")]),v._v(" "),l("ul",[l("li",[v._v("一般函数 : 直接调用")]),v._v(" "),l("li",[v._v("构造函数 : 通过new调用")]),v._v(" "),l("li",[v._v("对象 : 通过.调用内部的属性/方法")])])]),v._v(" "),l("li",[l("p",[v._v("this 是什么？")]),v._v(" "),l("ul",[l("li",[v._v("任何函数本质上都是通过某个对象来调用的，如果没有直接指定就是window")]),v._v(" "),l("li",[v._v("所有函数内部都有一个变量this")]),v._v(" "),l("li",[v._v("它的值是调用函数的当前对象")])])]),v._v(" "),l("li",[l("p",[v._v("如何确定this的值？")]),v._v(" "),l("ul",[l("li",[v._v("test()  window")]),v._v(" "),l("li",[v._v("p.test()  p")]),v._v(" "),l("li",[v._v("new test()  新创建的对象")]),v._v(" "),l("li",[v._v("p.call(obj)  obj")])])]),v._v(" "),l("li",[l("p",[v._v("函数中的this")]),v._v(" "),l("ul",[l("li",[v._v("显式指定谁: obj.xxx()")]),v._v(" "),l("li",[v._v("通过call/apply指定谁调用: xxx.call(obj)")]),v._v(" "),l("li",[v._v("不指定谁调用: xxx()  : window")]),v._v(" "),l("li",[v._v("回调函数: 看背后是通过谁来调用的: window/其它")])])]),v._v(" "),l("li",[l("p",[v._v("匿名函数自调用:")]),v._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[v._v("(function(w, obj){\n  //实现代码\n})(window, obj)\n")])])]),l("ul",[l("li",[v._v("专业术语为: IIFE (Immediately Invoked Function Expression) 立即调用函数表达式\n"),l("ul",[l("li",[v._v("作用：\n"),l("ul",[l("li",[v._v("隐藏实现")]),v._v(" "),l("li",[v._v("不会污染外部（全局）命名空间")]),v._v(" "),l("li",[v._v("用它来编写JS模块")])])])])])])]),v._v(" "),l("li",[l("p",[v._v("回调函数的理解")]),v._v(" "),l("ul",[l("li",[v._v("什么函数才是回调函数?\n"),l("ul",[l("li",[v._v("你定义的")]),v._v(" "),l("li",[v._v("你没有调用")]),v._v(" "),l("li",[v._v("但它最终执行了(在一定条件下或某个时刻)")])])]),v._v(" "),l("li",[v._v("常用的回调函数\n"),l("ul",[l("li",[v._v("dom事件回调函数   ==>发生事件的dom元素")]),v._v(" "),l("li",[v._v("定时器回调函数   ==>window")]),v._v(" "),l("li",[v._v("ajax请求回调函数(后面讲解)")]),v._v(" "),l("li",[v._v("生命周期回调函数(后面讲解)")])])])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);